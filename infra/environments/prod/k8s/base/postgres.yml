apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16.4
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: apegpt-postgres-cfg
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: apegpt-postgres-sec
                  key: POSTGRES_PASS
          envFrom:
            - configMapRef:
                name: apegpt-postgres-cfg
          volumeMounts:
            - name: postgres-storage
              mountPath: /fm_api_data
          resources:
            limits:
              memory: "1Gi"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - "-U"
                - "fm_app"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - "-U"
                - "fm_app"
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  namespace: postgres
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: docker-hostpath  # Must match the PVC
  hostPath:
    path: "/mnt/data/postgres"  # Ensure this directory exists on the host
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: postgres
spec:
  storageClassName: docker-hostpath  # Renamed from `docker.io/hostpath`
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apegpt-postgres-cfg
  namespace: postgres
data:
  POSTGRES_USER: 'fm_app'
